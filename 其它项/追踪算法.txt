#include<iostream>
using namespace std;
#include<Windows.h>
#include<conio.h>
#include<ctime>
#define H 40
#define L 40
void HideCursor()//隐藏光标
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO CursorInfo;
	GetConsoleCursorInfo(handle, &CursorInfo);//获取控制台光标信息
	CursorInfo.bVisible = false; //隐藏控制台光标
	SetConsoleCursorInfo(handle, &CursorInfo);//设置控制台光标状态
}
void gotoxy(int y, int x)
{
	COORD p;//定义结构体变量p
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);//获取当前函数句柄
	p.X = x; p.Y = y;//将光标的目标移动位置传递给结构体
	SetConsoleCursorPosition(handle, p);//移动光标
}
void COLOR_PRINT(const char* s, int color)//颜色改变2.0
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(handle, FOREGROUND_INTENSITY | color);
	printf(s);
	SetConsoleTextAttribute(handle, FOREGROUND_INTENSITY | 7);
}
class Person
{
public:
	int Row;//行
	int List;//列
	int thingRow;//行
	int thingList;//列
	int Arr[H][L];
	Person(){}//没用的构造函数

	//初始化
	void ZeroArr()
	{
		this->Row = H / 2;
		this->List = L / 2;
		this->thingRow = 3;
		this->thingList = 3;
		memset(Arr, 0, sizeof(Arr));
		for (int i = 0; i < H; i++)
		{
			for (int j = 0; j < L; j++)
			{
				if (i == 0 || j == 0)
				{
					Arr[i][j] = 9;
				}
				if (i == H - 1 || j == L - 1)
				{
					Arr[i][j] = 9;
				}

			}
		}
		Arr[this->Row][this->List] = 1;
		Arr[this->thingRow][this->thingList] = 2;

	}
	//打印
	void PrintArr()
	{
		for (int i = 0; i < H; i++)
		{
			for (int j = 0; j < L; j++)
			{
				gotoxy(i, 2*j);
				switch (Arr[i][j])
				{
				case 0:cout << "  "; break;
				case 1:COLOR_PRINT("■", 2); break;
				case 2:COLOR_PRINT("■", 4); break;
				case 9:COLOR_PRINT("■", 3); break;
				default:cout << "  ";

				}
			}
			cout << endl;
		}
	}
	//分析输入值 反馈影响
	void GetChar(char c)
	{
		int NextH = this->Row;
		int NextL = this->List;

		if (c == 'w') {

			NextH--;
		}
		else if (c == 's') {

			NextH++;
		}
		else if (c == 'a') {

			NextL--;
		}
		else if (c == 'd') {

			NextL++;
		}
		else
		{

		}
		if (Arr[NextH][NextL] == 0)
		{
			Arr[this->Row][this->List] = 0;
			Arr[NextH][NextL] = 1;
			this->Row = NextH;
			this->List = NextL;
		}
		int tempWhere;
		if (this->thingRow == this->Row&&this->thingList<this->List){
			tempWhere = 4;
		}
		else if (this->thingRow == this->Row&&this->thingList > this->List){
			tempWhere = 5;
		}
		else if (this->thingList == this->List&&this->thingRow > this->Row){
			tempWhere = 7;
		}
		else if (this->thingList == this->List&&this->thingRow < this->Row){
			tempWhere = 2;
		}
		else if (this->thingList < this->List&&this->thingRow < this->Row){
			tempWhere = 1;
		}
		else if (this->thingList > this->List&&this->thingRow > this->Row) {
			tempWhere = 8;
		}
		else if (this->thingList < this->List&&this->thingRow > this->Row) {
			tempWhere = 6;
		}
		else if (this->thingList > this->List&&this->thingRow < this->Row) {
			tempWhere = 3;
		}
		srand((unsigned)time(NULL));
		int numTem = rand() % 2;
		//int NextH2 = this->thingRow;
		//int NextL2 = this->thingList;
		this->Arr[this->thingRow][this->thingList] = 0;
		switch (tempWhere)
		{
		case 1:if (numTem == 0) { this->thingRow += 1; }
			   else { this->thingList += 1; }
			   break;
		case 2:this->thingRow += 1; break;
		case 3:if (numTem == 0) { this->thingRow += 1; }
			   else { this->thingList -= 1; }
			   break;
		case 4:this->thingList += 1; break;
		case 5:this->thingList -= 1; break;
		case 6:if (numTem == 0) { this->thingRow -= 1; }
			   else { this->thingList += 1; }
			   break;
		case 7:this->thingRow -= 1; break;
		case 8:if (numTem == 0) { this->thingRow -= 1; }
			   else { this->thingList -= 1; }
			   break;

		}
		this->Arr[this->thingRow][this->thingList] = 2;


	}
	void FindEnd()
	{
		if (this->thingRow == this->Row && this->thingList == this->List)
		{
			system("cls");

			cout << "GAME OVER" << endl;
			system("pause");
			system("cls");

			ZeroArr();
			PrintArr();
		}
	}



};





int main()
{

	Person p;

	p.ZeroArr();

	while (true)
	{
		HideCursor();//隐藏光标
		p.PrintArr();//打印
		char enterchar = _getch();//输入值
		do
		{
			HideCursor();//隐藏光标
			p.GetChar(enterchar);//输入值反馈影响
			p.PrintArr();//打印
			p.FindEnd();//结束判定

		} while (!_kbhit());
	}




	system("pause");
	return 0;
}