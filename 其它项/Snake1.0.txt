#include<iostream>
using namespace std;
#include<string>
#include"windows.h"
#include<ctime>
//蛇的属性
struct SnakeHead
{
	//蛇的最大长度
	int size;
	//属性 删除
	int TURE;
	//大数组
	int ArrHead[25][47];
};

//界面初始化
void Zero(int(*P)[47])
{
	for (int i = 0; i < 25; i++)
	{

		for (int j = 0; j < 47; j++)
		{
			P[i][j] = 0;
			switch (i)
			{
			case 0:P[i][j] = -1; break;
			case 24:P[i][j] = -1; break;
			}
			switch (j)
			{
			case 0:P[i][j] = -1; break;
			case 46:P[i][j] = -1; break;
			}
		}
	}
	srand((unsigned int)time(NULL));
	int a = rand() % 23 + 1;//行
	int b = rand() % 45 + 1;//列
	P[a][b] = 3;
}

//打印界面
void Print(SnakeHead*Head, int*Trial)
{
	for (int i = 0; i < 25; i++)
	{
		for (int j = 0; j < 47; j++)
		{
			switch (Head->ArrHead[i][j])//打印
			{
			case -1:cout << "□"; break;//墙
			case 0:cout << "  "; break;//空
			case 1:cout << "■"; break;//蛇
			case 2:*Trial -= 1; break;//GAME OVER
			case 3:cout << "◆"; break;//食物
			case 4:Head->size += 1; cout << "■"; Head->ArrHead[i][j] = 1; goto Flag;

			//case -1:cout << " "; break;//墙
			//case 0:cout << "0"; break;//空
			//case 1:cout << "1"; break;//蛇
			//case 2:*Trial -= 1; break;//GAME OVER
			//case 3:cout << "3"; break;//食物
			//case 4:Head->size += 1; cout << "4"; Head->ArrHead[i][j] = 1; goto Flag;

			default:break;
			Flag://布置食物
				srand((unsigned int)time(NULL));
				bool q = true;
				while (q)
				{
					int a = rand() % 23 + 1;//行
					int b = rand() % 45 + 1;//列
					if (Head->ArrHead[a][b] == 0)
					{
						Head->ArrHead[a][b] = 3;
						q = false;
					}
				}
			break;
			}
		}
		cout << endl;
	}
}

//控制界面
void Change(SnakeHead*Head, int*x, int*y, int*Trial, int(*ARR)[2])
{
	int c = 1;//防止误判
	cout << "请输入：5 2 1 3 控制：上 下 左 右" << endl;
	//方向的输入
	int mobile;
	cin >> mobile;

	//自动控置---随机(
	//while (true)
	//{
	//	srand((unsigned int)time(NULL));
	//	int temp01 = rand() % 4;//行
	//	mobile = temp01;
	//	switch (mobile)
	//	{
	//	case 0:goto T;
	//	case 1:goto T;
	//	case 2:goto T;
	//	case 3:goto T;
	//	}
	//}
 //   T:;

	//自动控置---固定
	//if (Head->TURE < 10)
	//{
	//	mobile = 3;
	//}
	//else if (Head->TURE < 15)
	//{
	//	mobile = 2;
	//}
	//else if (Head->TURE < 24)
	//{
	//	mobile = 3;
	//}
	//else if (Head->TURE < 35)
	//{
	//	mobile = 2;
	//}
	//else
	//{
	//	mobile = 1;
	//}

	switch (mobile)
	{
	case 5:Head->ArrHead[*x - 1][*y] += 1; *x -= 1; break;//上
	case 1:Head->ArrHead[*x][*y - 1] += 1; *y -= 1; break;//左
	case 2:Head->ArrHead[*x + 1][*y] += 1; *x += 1; break;//下
	case 3:Head->ArrHead[*x][*y + 1] += 1; *y += 1; break;//右
	default:c -= 1; break;
	}
	int temp = Head->TURE;
	int TEMP = temp;
	switch (c)//非正规键跳出对数组修改;有必要放在int后,原因未知
	{
	case 0:goto A;//跳！
	}
	for (int i = 0; i < TEMP; i++)
	{
		ARR[temp][0] = ARR[temp - 1][0];
		ARR[temp][1] = ARR[temp - 1][1];
		temp -= 1;
	}

	ARR[0][0] = *x;
	ARR[0][1] = *y;

	if (Head->TURE >= Head->size)
	{
		int i = ARR[Head->size][0];
		int j = ARR[Head->size][1];
		Head->ArrHead[i][j] = 0;
	}
	Head->TURE += 1;//数组移动计数
	//GAME OVER
	if (*x == 0 || *x == 24)
	{
		*Trial -= 1;
	}
	else if (*y == 0 || *y == 46)
	{
		*Trial -= 1;
	}
A:
	return;
}


int main()
{
	while (true)
	{
		struct SnakeHead Head;//定义属性
		Zero(Head.ArrHead);
		Head.size = 6;//最大长度初始化
		Head.TURE = 0;
		system("color 0A");//颜色改变
		int ARR[1500][2];//蛇的长度决定数组
		int Trial = 1;//退出循环
		int x = 9;//初始横坐标
		int y = 9;//初始纵坐标
		while (Trial == 1)
		{
			Print(&Head, &Trial);//打印
			switch (Trial)
			{
			case 0:goto FLAG;//跳！
			}
			Change(&Head, &x, &y, &Trial, ARR);//移动
			//system("pause");
		FLAG:
			system("cls");
		}
		system("cls");
		cout << "You Are Dead !" << endl;
		system("pause");
		system("cls");

	}
	system("pause");
	return 0;
}

//解决闪屏？？
//while (1)
//{
//	for (char c = 'a'; c < 'z'; c++)
//	{
//		system("cls");
//		for (int i = 0; i < 800; i++)
//		{
//			printf("%c", c);
//		}
//	}
//}